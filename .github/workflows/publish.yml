name: Publish to MavenCentral

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    name: Create GitHub Release with APK
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Fetch Tags
        run: git fetch --tags

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Set Release Version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            LATEST_TAG=$(git tag -l "v*" --sort=-v:refname | head -n 1)
            echo "RELEASE_VERSION=${LATEST_TAG}" >> $GITHUB_ENV
          else
            echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - name: Generate Release Notes
        run: |
          CURRENT_TAG="${{ env.RELEASE_VERSION }}"
          PREVIOUS_TAG=$(git tag -l "v*" --sort=-v:refname | grep -A1 "$CURRENT_TAG" | tail -n1)
          echo "Previous tag: $PREVIOUS_TAG"
          RELEASE_NOTES=$(git log "$PREVIOUS_TAG..$CURRENT_TAG" --pretty=format:"- %s")
          {
              echo "RELEASE_NOTES<<EOF"
              echo "$RELEASE_NOTES"
              echo "EOF"
          } >> $GITHUB_ENV

      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > ${{ github.workspace }}/composeApp/release.keystore

      - name: Grant Execute Permission to Gradlew
        run: chmod +x gradlew

      - name: Build Signed APK and AAB
        run: |
          ./gradlew :composeApp:assembleRelease \
          -Pandroid.injected.signing.store.file=${{ github.workspace }}/composeApp/release.keystore \
          -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Find APK and AAB
        run: |
          APK_PATH=$(find "${{ github.workspace }}/composeApp/build/outputs/apk/release" -name "*.apk" | head -n 1)
          if [ -z "$APK_PATH" ] || [ -z "$AAB_PATH" ]; then
              echo "❌ APK or AAB not found! Release failed."
              exit 1
          else
              echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
              echo "✅ Found APK at: $APK_PATH"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.RELEASE_NOTES }}
          files: ${{ env.APK_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

  publish:
    name: Release build and publish
    runs-on: macOS-latest
    needs: release
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Publish to MavenCentral
        run: ./gradlew :lib:publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
